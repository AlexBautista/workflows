name: Install Arachne with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-arachne:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout Arachne repository
      uses: actions/checkout@v2
      with:
        repository: 'OHDSI/Arachne'

    # Set up Docker (docker Already Installed on Ubuntu images
    #- name: Set up Docker
     # run: |
      #  sudo apt-get update
       # sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        #curl -fsSL https://get.docker.com -o get-docker.sh
        #sudo sh get-docker.sh
        #sudo usermod -aG docker $USER
    
    - name: Verify Docker installation
      run: docker --version

    # Set up Docker Compose
    - name: Set up Docker Compose
      run: |
      
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Check Docker Compose version

    # Set up the environment (if necessary)
    - name: Set up environment
      run: |
      
        echo "Setting up environment variables..."
        # Add any environment variables here if needed (for example, for DB connections)
        # export MY_ENV_VAR=value
        echo "Environment setup complete."

    - name: List files in repository
      run: |
      
        echo "Listing files in the repository:"
        ls -R

    # Start Arachne using Docker Compose
    - name: Start Arachne with Docker Compose
      run: |
      
        cd install/docker
        docker-compose up -d  # Start the containers in detached mode

    # Optionally, verify the Arachne container is running
    - name: Verify Arachne is running
      # List running containers to ensure Arachne containers are up
      run: |  
      
        docker ps
        cd /install/docker
        docker-compose logs  # This will show the logs from all containers, which may help identify issues

    - name: Wait for Arachne to start
      run: sleep 30  # Wait for 30 seconds (adjust based on your needs)

    # Optional: Check if Arachne is accessible (assuming it exposes a web service)
    - name: Test Arachne installation
      # Replace with the correct port if needed
      run: |    
      
        curl -v http://localhost:8080 
